[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-intervention-agent"
version = "1.0.3"
description = "AI Intervention Agent: MCP server enabling real-time user intervention in AI-assisted development workflows."
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "xiadengma", email = "52972447+XIADENGMA@users.noreply.github.com" },
]
keywords = [
    "mcp",
    "ai",
    "intervention",
    "feedback",
    "agent",
    "claude",
    "cursor",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "fastmcp>=2.0.0",
    "flask>=2.3.0",
    "flask-cors>=4.0.0",
    "markdown>=3.5.0",
    "pygments>=2.16.0",
    "requests>=2.31.0",
    "urllib3>=1.26.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/xiadengma/ai-intervention-agent"
Repository = "https://github.com/xiadengma/ai-intervention-agent"
Issues = "https://github.com/xiadengma/ai-intervention-agent/issues"
Documentation = "https://github.com/xiadengma/ai-intervention-agent#readme"

[project.scripts]
ai-intervention-agent = "server:main"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.hatch.build.targets.sdist]
include = [
    "/server.py",
    "/web_ui.py",
    "/templates",
    "/fonts",
    "/icons",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=ai_intervention_agent --cov-report=term-missing"
